State 144 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: header_program block

    2 $@1: %empty

    3 block: start_block $@1 local_var_dec sub_progs sentences end_block

    4 sub_progs: sub_progs sub_prog
    5          | %empty

    6 $@2: %empty

    7 sub_prog: header_subprogram $@2 block

    8 $@3: %empty

    9 $@4: %empty

   10 local_var_dec: START_VAR_DEC $@3 local_var $@4 END_VAR_DEC
   11              | %empty

   12 header_program: type MAIN PL PR

   13 start_block: BEGIN_P

   14 end_block: END

   15 local_var: local_var var_body
   16          | var_body

   17 $@5: %empty

   18 var_body: type $@5 list_id SEMICOLON
   19         | error

   20 list_id: list_id COMMA ID
   21        | ID
   22        | error

   23 $@6: %empty

   24 header_subprogram: type ID PL $@6 parameters PR
   25                  | type ID PL PR

   26 parameters: parameters COMMA type ID
   27           | type ID
   28           | error

   29 sentences: sentences sentence
   30          | sentence

   31 sentence: block
   32         | sentence_assign
   33         | sentence_if_then_else
   34         | sentence_while
   35         | sentence_input
   36         | sentence_output
   37         | sentence_return
   38         | sentence_do_until
   39         | sentence_list_forward_back
   40         | sentence_list_start_cursor
   41         | error

   42 sentence_assign: ID ASSIGN expr SEMICOLON

   43 sentence_if_then_else: IF PL expr PR sentence
   44                      | IF PL expr PR sentence ELSE sentence

   45 sentence_while: WHILE PL expr PR sentence

   46 sentence_input: INPUT CAD COMMA list_id SEMICOLON
   47               | INPUT list_id SEMICOLON

   48 sentence_output: OUTPUT list_expr_cad SEMICOLON

   49 sentence_return: RETURN expr SEMICOLON

   50 sentence_do_until: DO sentence UNTIL PL expr PR SEMICOLON

   51 sentence_list_forward_back: expr OP_LIST SEMICOLON

   52 sentence_list_start_cursor: OP_LIST_START_CURSOR expr SEMICOLON

   53 expr: PL expr PR
   54     | ID
   55     | const
   56     | function_call
   57     | OP_UNIT expr
   58     | expr OP_BIN expr
   59     | error

   60 $@7: %empty

   61 function_call: ID PL $@7 list_expr PR

   62 $@8: %empty

   63 function_call: ID PL $@8 PR

   64 list_expr: list_expr COMMA expr
   65          | expr

   66 type: TYPE
   67     | LIST TYPE

   68 const: INT
   69      | FLOAT
   70      | CHAR
   71      | BOOL
   72      | const_list

   73 const_list: list_of_int
   74           | list_of_float
   75           | list_of_char
   76           | list_of_bool

   77 list_of_int: BEGIN_LIST list_int END_LIST

   78 list_int: list_int COMMA INT
   79         | INT

   80 list_of_float: BEGIN_LIST list_float END_LIST

   81 list_float: list_float COMMA FLOAT
   82           | FLOAT

   83 list_of_char: BEGIN_LIST list_char END_LIST

   84 list_char: list_char COMMA CHAR
   85          | CHAR

   86 list_of_bool: BEGIN_LIST list_bool END_LIST

   87 list_bool: list_bool COMMA BOOL
   88          | BOOL

   89 list_expr_cad: list_expr_cad COMMA expr_cad
   90              | expr_cad

   91 expr_cad: expr
   92         | CAD


Terminals, with rules where they appear

$end (0) 0
error (256) 19 22 28 41 59
MAIN (258) 12
IF (259) 43 44
ELSE (260) 44
DO (261) 50
UNTIL (262) 50
OP_BIN (263) 58
OP_LIST (264) 51
OP_LIST_START_CURSOR (265) 52
OP_UNIT (266) 57
TYPE (267) 66 67
BEGIN_LIST (268) 77 80 83 86
END_LIST (269) 77 80 83 86
ASSIGN (270) 42
PL (271) 12 24 25 43 44 45 50 53 61 63
PR (272) 12 24 25 43 44 45 50 53 61 63
BEGIN_P (273) 13
END (274) 14
COMMA (275) 20 26 46 64 78 81 84 87 89
SEMICOLON (276) 18 42 46 47 48 49 50 51 52
INPUT (277) 46 47
OUTPUT (278) 48
START_VAR_DEC (279) 10
END_VAR_DEC (280) 10
LIST (281) 67
ID (282) 20 21 24 25 26 27 42 54 61 63
RETURN (283) 49
WHILE (284) 45
BOOL (285) 71 87 88
INT (286) 68 78 79
FLOAT (287) 69 81 82
CHAR (288) 70 84 85
CAD (289) 46 92


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
block (37)
    on left: 3, on right: 1 7 31
$@1 (38)
    on left: 2, on right: 3
sub_progs (39)
    on left: 4 5, on right: 3 4
sub_prog (40)
    on left: 7, on right: 4
$@2 (41)
    on left: 6, on right: 7
local_var_dec (42)
    on left: 10 11, on right: 3
$@3 (43)
    on left: 8, on right: 10
$@4 (44)
    on left: 9, on right: 10
header_program (45)
    on left: 12, on right: 1
start_block (46)
    on left: 13, on right: 3
end_block (47)
    on left: 14, on right: 3
local_var (48)
    on left: 15 16, on right: 10 15
var_body (49)
    on left: 18 19, on right: 15 16
$@5 (50)
    on left: 17, on right: 18
list_id (51)
    on left: 20 21 22, on right: 18 20 46 47
header_subprogram (52)
    on left: 24 25, on right: 7
$@6 (53)
    on left: 23, on right: 24
parameters (54)
    on left: 26 27 28, on right: 24 26
sentences (55)
    on left: 29 30, on right: 3 29
sentence (56)
    on left: 31 32 33 34 35 36 37 38 39 40 41, on right: 29 30 43 44
    45 50
sentence_assign (57)
    on left: 42, on right: 32
sentence_if_then_else (58)
    on left: 43 44, on right: 33
sentence_while (59)
    on left: 45, on right: 34
sentence_input (60)
    on left: 46 47, on right: 35
sentence_output (61)
    on left: 48, on right: 36
sentence_return (62)
    on left: 49, on right: 37
sentence_do_until (63)
    on left: 50, on right: 38
sentence_list_forward_back (64)
    on left: 51, on right: 39
sentence_list_start_cursor (65)
    on left: 52, on right: 40
expr (66)
    on left: 53 54 55 56 57 58 59, on right: 42 43 44 45 49 50 51 52
    53 57 58 64 65 91
function_call (67)
    on left: 61 63, on right: 56
$@7 (68)
    on left: 60, on right: 61
$@8 (69)
    on left: 62, on right: 63
list_expr (70)
    on left: 64 65, on right: 61 64
type (71)
    on left: 66 67, on right: 12 18 24 25 26 27
const (72)
    on left: 68 69 70 71 72, on right: 55
const_list (73)
    on left: 73 74 75 76, on right: 72
list_of_int (74)
    on left: 77, on right: 73
list_int (75)
    on left: 78 79, on right: 77 78
list_of_float (76)
    on left: 80, on right: 74
list_float (77)
    on left: 81 82, on right: 80 81
list_of_char (78)
    on left: 83, on right: 75
list_char (79)
    on left: 84 85, on right: 83 84
list_of_bool (80)
    on left: 86, on right: 76
list_bool (81)
    on left: 87 88, on right: 86 87
list_expr_cad (82)
    on left: 89 90, on right: 48 89
expr_cad (83)
    on left: 91 92, on right: 89 90


State 0

    0 $accept: . program $end

    TYPE  shift, and go to state 1
    LIST  shift, and go to state 2

    program         go to state 3
    header_program  go to state 4
    type            go to state 5


State 1

   66 type: TYPE .

    $default  reduce using rule 66 (type)


State 2

   67 type: LIST . TYPE

    TYPE  shift, and go to state 6


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    1 program: header_program . block

    BEGIN_P  shift, and go to state 8

    block        go to state 9
    start_block  go to state 10


State 5

   12 header_program: type . MAIN PL PR

    MAIN  shift, and go to state 11


State 6

   67 type: LIST TYPE .

    $default  reduce using rule 67 (type)


State 7

    0 $accept: program $end .

    $default  accept


State 8

   13 start_block: BEGIN_P .

    $default  reduce using rule 13 (start_block)


State 9

    1 program: header_program block .

    $default  reduce using rule 1 (program)


State 10

    3 block: start_block . $@1 local_var_dec sub_progs sentences end_block

    $default  reduce using rule 2 ($@1)

    $@1  go to state 12


State 11

   12 header_program: type MAIN . PL PR

    PL  shift, and go to state 13


State 12

    3 block: start_block $@1 . local_var_dec sub_progs sentences end_block

    START_VAR_DEC  shift, and go to state 14

    $default  reduce using rule 11 (local_var_dec)

    local_var_dec  go to state 15


State 13

   12 header_program: type MAIN PL . PR

    PR  shift, and go to state 16


State 14

   10 local_var_dec: START_VAR_DEC . $@3 local_var $@4 END_VAR_DEC

    $default  reduce using rule 8 ($@3)

    $@3  go to state 17


State 15

    3 block: start_block $@1 local_var_dec . sub_progs sentences end_block

    $default  reduce using rule 5 (sub_progs)

    sub_progs  go to state 18


State 16

   12 header_program: type MAIN PL PR .

    $default  reduce using rule 12 (header_program)


State 17

   10 local_var_dec: START_VAR_DEC $@3 . local_var $@4 END_VAR_DEC

    error  shift, and go to state 19
    TYPE   shift, and go to state 1
    LIST   shift, and go to state 2

    local_var  go to state 20
    var_body   go to state 21
    type       go to state 22


State 18

    3 block: start_block $@1 local_var_dec sub_progs . sentences end_block
    4 sub_progs: sub_progs . sub_prog

    error                 shift, and go to state 23
    IF                    shift, and go to state 24
    DO                    shift, and go to state 25
    OP_LIST_START_CURSOR  shift, and go to state 26
    OP_UNIT               shift, and go to state 27
    TYPE                  shift, and go to state 1
    BEGIN_LIST            shift, and go to state 28
    PL                    shift, and go to state 29
    BEGIN_P               shift, and go to state 8
    INPUT                 shift, and go to state 30
    OUTPUT                shift, and go to state 31
    LIST                  shift, and go to state 2
    ID                    shift, and go to state 32
    RETURN                shift, and go to state 33
    WHILE                 shift, and go to state 34
    BOOL                  shift, and go to state 35
    INT                   shift, and go to state 36
    FLOAT                 shift, and go to state 37
    CHAR                  shift, and go to state 38

    block                       go to state 39
    sub_prog                    go to state 40
    start_block                 go to state 10
    header_subprogram           go to state 41
    sentences                   go to state 42
    sentence                    go to state 43
    sentence_assign             go to state 44
    sentence_if_then_else       go to state 45
    sentence_while              go to state 46
    sentence_input              go to state 47
    sentence_output             go to state 48
    sentence_return             go to state 49
    sentence_do_until           go to state 50
    sentence_list_forward_back  go to state 51
    sentence_list_start_cursor  go to state 52
    expr                        go to state 53
    function_call               go to state 54
    type                        go to state 55
    const                       go to state 56
    const_list                  go to state 57
    list_of_int                 go to state 58
    list_of_float               go to state 59
    list_of_char                go to state 60
    list_of_bool                go to state 61


State 19

   19 var_body: error .

    $default  reduce using rule 19 (var_body)


State 20

   10 local_var_dec: START_VAR_DEC $@3 local_var . $@4 END_VAR_DEC
   15 local_var: local_var . var_body

    error  shift, and go to state 19
    TYPE   shift, and go to state 1
    LIST   shift, and go to state 2

    END_VAR_DEC  reduce using rule 9 ($@4)

    $@4       go to state 62
    var_body  go to state 63
    type      go to state 22


State 21

   16 local_var: var_body .

    $default  reduce using rule 16 (local_var)


State 22

   18 var_body: type . $@5 list_id SEMICOLON

    $default  reduce using rule 17 ($@5)

    $@5  go to state 64


State 23

   41 sentence: error .
   59 expr: error .

    OP_BIN    reduce using rule 59 (expr)
    OP_LIST   reduce using rule 59 (expr)
    $default  reduce using rule 41 (sentence)


State 24

   43 sentence_if_then_else: IF . PL expr PR sentence
   44                      | IF . PL expr PR sentence ELSE sentence

    PL  shift, and go to state 65


State 25

   50 sentence_do_until: DO . sentence UNTIL PL expr PR SEMICOLON

    error                 shift, and go to state 23
    IF                    shift, and go to state 24
    DO                    shift, and go to state 25
    OP_LIST_START_CURSOR  shift, and go to state 26
    OP_UNIT               shift, and go to state 27
    BEGIN_LIST            shift, and go to state 28
    PL                    shift, and go to state 29
    BEGIN_P               shift, and go to state 8
    INPUT                 shift, and go to state 30
    OUTPUT                shift, and go to state 31
    ID                    shift, and go to state 32
    RETURN                shift, and go to state 33
    WHILE                 shift, and go to state 34
    BOOL                  shift, and go to state 35
    INT                   shift, and go to state 36
    FLOAT                 shift, and go to state 37
    CHAR                  shift, and go to state 38

    block                       go to state 39
    start_block                 go to state 10
    sentence                    go to state 66
    sentence_assign             go to state 44
    sentence_if_then_else       go to state 45
    sentence_while              go to state 46
    sentence_input              go to state 47
    sentence_output             go to state 48
    sentence_return             go to state 49
    sentence_do_until           go to state 50
    sentence_list_forward_back  go to state 51
    sentence_list_start_cursor  go to state 52
    expr                        go to state 53
    function_call               go to state 54
    const                       go to state 56
    const_list                  go to state 57
    list_of_int                 go to state 58
    list_of_float               go to state 59
    list_of_char                go to state 60
    list_of_bool                go to state 61


State 26

   52 sentence_list_start_cursor: OP_LIST_START_CURSOR . expr SEMICOLON

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38

    expr           go to state 69
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61


State 27

   57 expr: OP_UNIT . expr

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38

    expr           go to state 70
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61


State 28

   77 list_of_int: BEGIN_LIST . list_int END_LIST
   80 list_of_float: BEGIN_LIST . list_float END_LIST
   83 list_of_char: BEGIN_LIST . list_char END_LIST
   86 list_of_bool: BEGIN_LIST . list_bool END_LIST

    BOOL   shift, and go to state 71
    INT    shift, and go to state 72
    FLOAT  shift, and go to state 73
    CHAR   shift, and go to state 74

    list_int    go to state 75
    list_float  go to state 76
    list_char   go to state 77
    list_bool   go to state 78


State 29

   53 expr: PL . expr PR

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38

    expr           go to state 79
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61


State 30

   46 sentence_input: INPUT . CAD COMMA list_id SEMICOLON
   47               | INPUT . list_id SEMICOLON

    error  shift, and go to state 80
    ID     shift, and go to state 81
    CAD    shift, and go to state 82

    list_id  go to state 83


State 31

   48 sentence_output: OUTPUT . list_expr_cad SEMICOLON

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38
    CAD         shift, and go to state 84

    expr           go to state 85
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61
    list_expr_cad  go to state 86
    expr_cad       go to state 87


State 32

   42 sentence_assign: ID . ASSIGN expr SEMICOLON
   54 expr: ID .
   61 function_call: ID . PL $@7 list_expr PR
   63              | ID . PL $@8 PR

    ASSIGN  shift, and go to state 88
    PL      shift, and go to state 89

    $default  reduce using rule 54 (expr)


State 33

   49 sentence_return: RETURN . expr SEMICOLON

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38

    expr           go to state 90
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61


State 34

   45 sentence_while: WHILE . PL expr PR sentence

    PL  shift, and go to state 91


State 35

   71 const: BOOL .

    $default  reduce using rule 71 (const)


State 36

   68 const: INT .

    $default  reduce using rule 68 (const)


State 37

   69 const: FLOAT .

    $default  reduce using rule 69 (const)


State 38

   70 const: CHAR .

    $default  reduce using rule 70 (const)


State 39

   31 sentence: block .

    $default  reduce using rule 31 (sentence)


State 40

    4 sub_progs: sub_progs sub_prog .

    $default  reduce using rule 4 (sub_progs)


State 41

    7 sub_prog: header_subprogram . $@2 block

    $default  reduce using rule 6 ($@2)

    $@2  go to state 92


State 42

    3 block: start_block $@1 local_var_dec sub_progs sentences . end_block
   29 sentences: sentences . sentence

    error                 shift, and go to state 23
    IF                    shift, and go to state 24
    DO                    shift, and go to state 25
    OP_LIST_START_CURSOR  shift, and go to state 26
    OP_UNIT               shift, and go to state 27
    BEGIN_LIST            shift, and go to state 28
    PL                    shift, and go to state 29
    BEGIN_P               shift, and go to state 8
    END                   shift, and go to state 93
    INPUT                 shift, and go to state 30
    OUTPUT                shift, and go to state 31
    ID                    shift, and go to state 32
    RETURN                shift, and go to state 33
    WHILE                 shift, and go to state 34
    BOOL                  shift, and go to state 35
    INT                   shift, and go to state 36
    FLOAT                 shift, and go to state 37
    CHAR                  shift, and go to state 38

    block                       go to state 39
    start_block                 go to state 10
    end_block                   go to state 94
    sentence                    go to state 95
    sentence_assign             go to state 44
    sentence_if_then_else       go to state 45
    sentence_while              go to state 46
    sentence_input              go to state 47
    sentence_output             go to state 48
    sentence_return             go to state 49
    sentence_do_until           go to state 50
    sentence_list_forward_back  go to state 51
    sentence_list_start_cursor  go to state 52
    expr                        go to state 53
    function_call               go to state 54
    const                       go to state 56
    const_list                  go to state 57
    list_of_int                 go to state 58
    list_of_float               go to state 59
    list_of_char                go to state 60
    list_of_bool                go to state 61


State 43

   30 sentences: sentence .

    $default  reduce using rule 30 (sentences)


State 44

   32 sentence: sentence_assign .

    $default  reduce using rule 32 (sentence)


State 45

   33 sentence: sentence_if_then_else .

    $default  reduce using rule 33 (sentence)


State 46

   34 sentence: sentence_while .

    $default  reduce using rule 34 (sentence)


State 47

   35 sentence: sentence_input .

    $default  reduce using rule 35 (sentence)


State 48

   36 sentence: sentence_output .

    $default  reduce using rule 36 (sentence)


State 49

   37 sentence: sentence_return .

    $default  reduce using rule 37 (sentence)


State 50

   38 sentence: sentence_do_until .

    $default  reduce using rule 38 (sentence)


State 51

   39 sentence: sentence_list_forward_back .

    $default  reduce using rule 39 (sentence)


State 52

   40 sentence: sentence_list_start_cursor .

    $default  reduce using rule 40 (sentence)


State 53

   51 sentence_list_forward_back: expr . OP_LIST SEMICOLON
   58 expr: expr . OP_BIN expr

    OP_BIN   shift, and go to state 96
    OP_LIST  shift, and go to state 97


State 54

   56 expr: function_call .

    $default  reduce using rule 56 (expr)


State 55

   24 header_subprogram: type . ID PL $@6 parameters PR
   25                  | type . ID PL PR

    ID  shift, and go to state 98


State 56

   55 expr: const .

    $default  reduce using rule 55 (expr)


State 57

   72 const: const_list .

    $default  reduce using rule 72 (const)


State 58

   73 const_list: list_of_int .

    $default  reduce using rule 73 (const_list)


State 59

   74 const_list: list_of_float .

    $default  reduce using rule 74 (const_list)


State 60

   75 const_list: list_of_char .

    $default  reduce using rule 75 (const_list)


State 61

   76 const_list: list_of_bool .

    $default  reduce using rule 76 (const_list)


State 62

   10 local_var_dec: START_VAR_DEC $@3 local_var $@4 . END_VAR_DEC

    END_VAR_DEC  shift, and go to state 99


State 63

   15 local_var: local_var var_body .

    $default  reduce using rule 15 (local_var)


State 64

   18 var_body: type $@5 . list_id SEMICOLON

    error  shift, and go to state 80
    ID     shift, and go to state 81

    list_id  go to state 100


State 65

   43 sentence_if_then_else: IF PL . expr PR sentence
   44                      | IF PL . expr PR sentence ELSE sentence

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38

    expr           go to state 101
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61


State 66

   50 sentence_do_until: DO sentence . UNTIL PL expr PR SEMICOLON

    UNTIL  shift, and go to state 102


State 67

   59 expr: error .

    $default  reduce using rule 59 (expr)


State 68

   54 expr: ID .
   61 function_call: ID . PL $@7 list_expr PR
   63              | ID . PL $@8 PR

    PL  shift, and go to state 89

    $default  reduce using rule 54 (expr)


State 69

   52 sentence_list_start_cursor: OP_LIST_START_CURSOR expr . SEMICOLON
   58 expr: expr . OP_BIN expr

    OP_BIN     shift, and go to state 96
    SEMICOLON  shift, and go to state 103


State 70

   57 expr: OP_UNIT expr .
   58     | expr . OP_BIN expr

    $default  reduce using rule 57 (expr)


State 71

   88 list_bool: BOOL .

    $default  reduce using rule 88 (list_bool)


State 72

   79 list_int: INT .

    $default  reduce using rule 79 (list_int)


State 73

   82 list_float: FLOAT .

    $default  reduce using rule 82 (list_float)


State 74

   85 list_char: CHAR .

    $default  reduce using rule 85 (list_char)


State 75

   77 list_of_int: BEGIN_LIST list_int . END_LIST
   78 list_int: list_int . COMMA INT

    END_LIST  shift, and go to state 104
    COMMA     shift, and go to state 105


State 76

   80 list_of_float: BEGIN_LIST list_float . END_LIST
   81 list_float: list_float . COMMA FLOAT

    END_LIST  shift, and go to state 106
    COMMA     shift, and go to state 107


State 77

   83 list_of_char: BEGIN_LIST list_char . END_LIST
   84 list_char: list_char . COMMA CHAR

    END_LIST  shift, and go to state 108
    COMMA     shift, and go to state 109


State 78

   86 list_of_bool: BEGIN_LIST list_bool . END_LIST
   87 list_bool: list_bool . COMMA BOOL

    END_LIST  shift, and go to state 110
    COMMA     shift, and go to state 111


State 79

   53 expr: PL expr . PR
   58     | expr . OP_BIN expr

    OP_BIN  shift, and go to state 96
    PR      shift, and go to state 112


State 80

   22 list_id: error .

    $default  reduce using rule 22 (list_id)


State 81

   21 list_id: ID .

    $default  reduce using rule 21 (list_id)


State 82

   46 sentence_input: INPUT CAD . COMMA list_id SEMICOLON

    COMMA  shift, and go to state 113


State 83

   20 list_id: list_id . COMMA ID
   47 sentence_input: INPUT list_id . SEMICOLON

    COMMA      shift, and go to state 114
    SEMICOLON  shift, and go to state 115


State 84

   92 expr_cad: CAD .

    $default  reduce using rule 92 (expr_cad)


State 85

   58 expr: expr . OP_BIN expr
   91 expr_cad: expr .

    OP_BIN  shift, and go to state 96

    $default  reduce using rule 91 (expr_cad)


State 86

   48 sentence_output: OUTPUT list_expr_cad . SEMICOLON
   89 list_expr_cad: list_expr_cad . COMMA expr_cad

    COMMA      shift, and go to state 116
    SEMICOLON  shift, and go to state 117


State 87

   90 list_expr_cad: expr_cad .

    $default  reduce using rule 90 (list_expr_cad)


State 88

   42 sentence_assign: ID ASSIGN . expr SEMICOLON

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38

    expr           go to state 118
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61


State 89

   61 function_call: ID PL . $@7 list_expr PR
   63              | ID PL . $@8 PR

    PR        reduce using rule 62 ($@8)
    $default  reduce using rule 60 ($@7)

    $@7  go to state 119
    $@8  go to state 120


State 90

   49 sentence_return: RETURN expr . SEMICOLON
   58 expr: expr . OP_BIN expr

    OP_BIN     shift, and go to state 96
    SEMICOLON  shift, and go to state 121


State 91

   45 sentence_while: WHILE PL . expr PR sentence

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38

    expr           go to state 122
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61


State 92

    7 sub_prog: header_subprogram $@2 . block

    BEGIN_P  shift, and go to state 8

    block        go to state 123
    start_block  go to state 10


State 93

   14 end_block: END .

    $default  reduce using rule 14 (end_block)


State 94

    3 block: start_block $@1 local_var_dec sub_progs sentences end_block .

    $default  reduce using rule 3 (block)


State 95

   29 sentences: sentences sentence .

    $default  reduce using rule 29 (sentences)


State 96

   58 expr: expr OP_BIN . expr

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38

    expr           go to state 124
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61


State 97

   51 sentence_list_forward_back: expr OP_LIST . SEMICOLON

    SEMICOLON  shift, and go to state 125


State 98

   24 header_subprogram: type ID . PL $@6 parameters PR
   25                  | type ID . PL PR

    PL  shift, and go to state 126


State 99

   10 local_var_dec: START_VAR_DEC $@3 local_var $@4 END_VAR_DEC .

    $default  reduce using rule 10 (local_var_dec)


State 100

   18 var_body: type $@5 list_id . SEMICOLON
   20 list_id: list_id . COMMA ID

    COMMA      shift, and go to state 114
    SEMICOLON  shift, and go to state 127


State 101

   43 sentence_if_then_else: IF PL expr . PR sentence
   44                      | IF PL expr . PR sentence ELSE sentence
   58 expr: expr . OP_BIN expr

    OP_BIN  shift, and go to state 96
    PR      shift, and go to state 128


State 102

   50 sentence_do_until: DO sentence UNTIL . PL expr PR SEMICOLON

    PL  shift, and go to state 129


State 103

   52 sentence_list_start_cursor: OP_LIST_START_CURSOR expr SEMICOLON .

    $default  reduce using rule 52 (sentence_list_start_cursor)


State 104

   77 list_of_int: BEGIN_LIST list_int END_LIST .

    $default  reduce using rule 77 (list_of_int)


State 105

   78 list_int: list_int COMMA . INT

    INT  shift, and go to state 130


State 106

   80 list_of_float: BEGIN_LIST list_float END_LIST .

    $default  reduce using rule 80 (list_of_float)


State 107

   81 list_float: list_float COMMA . FLOAT

    FLOAT  shift, and go to state 131


State 108

   83 list_of_char: BEGIN_LIST list_char END_LIST .

    $default  reduce using rule 83 (list_of_char)


State 109

   84 list_char: list_char COMMA . CHAR

    CHAR  shift, and go to state 132


State 110

   86 list_of_bool: BEGIN_LIST list_bool END_LIST .

    $default  reduce using rule 86 (list_of_bool)


State 111

   87 list_bool: list_bool COMMA . BOOL

    BOOL  shift, and go to state 133


State 112

   53 expr: PL expr PR .

    $default  reduce using rule 53 (expr)


State 113

   46 sentence_input: INPUT CAD COMMA . list_id SEMICOLON

    error  shift, and go to state 80
    ID     shift, and go to state 81

    list_id  go to state 134


State 114

   20 list_id: list_id COMMA . ID

    ID  shift, and go to state 135


State 115

   47 sentence_input: INPUT list_id SEMICOLON .

    $default  reduce using rule 47 (sentence_input)


State 116

   89 list_expr_cad: list_expr_cad COMMA . expr_cad

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38
    CAD         shift, and go to state 84

    expr           go to state 85
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61
    expr_cad       go to state 136


State 117

   48 sentence_output: OUTPUT list_expr_cad SEMICOLON .

    $default  reduce using rule 48 (sentence_output)


State 118

   42 sentence_assign: ID ASSIGN expr . SEMICOLON
   58 expr: expr . OP_BIN expr

    OP_BIN     shift, and go to state 96
    SEMICOLON  shift, and go to state 137


State 119

   61 function_call: ID PL $@7 . list_expr PR

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38

    expr           go to state 138
    function_call  go to state 54
    list_expr      go to state 139
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61


State 120

   63 function_call: ID PL $@8 . PR

    PR  shift, and go to state 140


State 121

   49 sentence_return: RETURN expr SEMICOLON .

    $default  reduce using rule 49 (sentence_return)


State 122

   45 sentence_while: WHILE PL expr . PR sentence
   58 expr: expr . OP_BIN expr

    OP_BIN  shift, and go to state 96
    PR      shift, and go to state 141


State 123

    7 sub_prog: header_subprogram $@2 block .

    $default  reduce using rule 7 (sub_prog)


State 124

   58 expr: expr . OP_BIN expr
   58     | expr OP_BIN expr .

    $default  reduce using rule 58 (expr)


State 125

   51 sentence_list_forward_back: expr OP_LIST SEMICOLON .

    $default  reduce using rule 51 (sentence_list_forward_back)


State 126

   24 header_subprogram: type ID PL . $@6 parameters PR
   25                  | type ID PL . PR

    PR  shift, and go to state 142

    $default  reduce using rule 23 ($@6)

    $@6  go to state 143


State 127

   18 var_body: type $@5 list_id SEMICOLON .

    $default  reduce using rule 18 (var_body)


State 128

   43 sentence_if_then_else: IF PL expr PR . sentence
   44                      | IF PL expr PR . sentence ELSE sentence

    error                 shift, and go to state 23
    IF                    shift, and go to state 24
    DO                    shift, and go to state 25
    OP_LIST_START_CURSOR  shift, and go to state 26
    OP_UNIT               shift, and go to state 27
    BEGIN_LIST            shift, and go to state 28
    PL                    shift, and go to state 29
    BEGIN_P               shift, and go to state 8
    INPUT                 shift, and go to state 30
    OUTPUT                shift, and go to state 31
    ID                    shift, and go to state 32
    RETURN                shift, and go to state 33
    WHILE                 shift, and go to state 34
    BOOL                  shift, and go to state 35
    INT                   shift, and go to state 36
    FLOAT                 shift, and go to state 37
    CHAR                  shift, and go to state 38

    block                       go to state 39
    start_block                 go to state 10
    sentence                    go to state 144
    sentence_assign             go to state 44
    sentence_if_then_else       go to state 45
    sentence_while              go to state 46
    sentence_input              go to state 47
    sentence_output             go to state 48
    sentence_return             go to state 49
    sentence_do_until           go to state 50
    sentence_list_forward_back  go to state 51
    sentence_list_start_cursor  go to state 52
    expr                        go to state 53
    function_call               go to state 54
    const                       go to state 56
    const_list                  go to state 57
    list_of_int                 go to state 58
    list_of_float               go to state 59
    list_of_char                go to state 60
    list_of_bool                go to state 61


State 129

   50 sentence_do_until: DO sentence UNTIL PL . expr PR SEMICOLON

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38

    expr           go to state 145
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61


State 130

   78 list_int: list_int COMMA INT .

    $default  reduce using rule 78 (list_int)


State 131

   81 list_float: list_float COMMA FLOAT .

    $default  reduce using rule 81 (list_float)


State 132

   84 list_char: list_char COMMA CHAR .

    $default  reduce using rule 84 (list_char)


State 133

   87 list_bool: list_bool COMMA BOOL .

    $default  reduce using rule 87 (list_bool)


State 134

   20 list_id: list_id . COMMA ID
   46 sentence_input: INPUT CAD COMMA list_id . SEMICOLON

    COMMA      shift, and go to state 114
    SEMICOLON  shift, and go to state 146


State 135

   20 list_id: list_id COMMA ID .

    $default  reduce using rule 20 (list_id)


State 136

   89 list_expr_cad: list_expr_cad COMMA expr_cad .

    $default  reduce using rule 89 (list_expr_cad)


State 137

   42 sentence_assign: ID ASSIGN expr SEMICOLON .

    $default  reduce using rule 42 (sentence_assign)


State 138

   58 expr: expr . OP_BIN expr
   65 list_expr: expr .

    OP_BIN  shift, and go to state 96

    $default  reduce using rule 65 (list_expr)


State 139

   61 function_call: ID PL $@7 list_expr . PR
   64 list_expr: list_expr . COMMA expr

    PR     shift, and go to state 147
    COMMA  shift, and go to state 148


State 140

   63 function_call: ID PL $@8 PR .

    $default  reduce using rule 63 (function_call)


State 141

   45 sentence_while: WHILE PL expr PR . sentence

    error                 shift, and go to state 23
    IF                    shift, and go to state 24
    DO                    shift, and go to state 25
    OP_LIST_START_CURSOR  shift, and go to state 26
    OP_UNIT               shift, and go to state 27
    BEGIN_LIST            shift, and go to state 28
    PL                    shift, and go to state 29
    BEGIN_P               shift, and go to state 8
    INPUT                 shift, and go to state 30
    OUTPUT                shift, and go to state 31
    ID                    shift, and go to state 32
    RETURN                shift, and go to state 33
    WHILE                 shift, and go to state 34
    BOOL                  shift, and go to state 35
    INT                   shift, and go to state 36
    FLOAT                 shift, and go to state 37
    CHAR                  shift, and go to state 38

    block                       go to state 39
    start_block                 go to state 10
    sentence                    go to state 149
    sentence_assign             go to state 44
    sentence_if_then_else       go to state 45
    sentence_while              go to state 46
    sentence_input              go to state 47
    sentence_output             go to state 48
    sentence_return             go to state 49
    sentence_do_until           go to state 50
    sentence_list_forward_back  go to state 51
    sentence_list_start_cursor  go to state 52
    expr                        go to state 53
    function_call               go to state 54
    const                       go to state 56
    const_list                  go to state 57
    list_of_int                 go to state 58
    list_of_float               go to state 59
    list_of_char                go to state 60
    list_of_bool                go to state 61


State 142

   25 header_subprogram: type ID PL PR .

    $default  reduce using rule 25 (header_subprogram)


State 143

   24 header_subprogram: type ID PL $@6 . parameters PR

    error  shift, and go to state 150
    TYPE   shift, and go to state 1
    LIST   shift, and go to state 2

    parameters  go to state 151
    type        go to state 152


State 144

   43 sentence_if_then_else: IF PL expr PR sentence .
   44                      | IF PL expr PR sentence . ELSE sentence

    ELSE  shift, and go to state 153

    ELSE      [reduce using rule 43 (sentence_if_then_else)]
    $default  reduce using rule 43 (sentence_if_then_else)


State 145

   50 sentence_do_until: DO sentence UNTIL PL expr . PR SEMICOLON
   58 expr: expr . OP_BIN expr

    OP_BIN  shift, and go to state 96
    PR      shift, and go to state 154


State 146

   46 sentence_input: INPUT CAD COMMA list_id SEMICOLON .

    $default  reduce using rule 46 (sentence_input)


State 147

   61 function_call: ID PL $@7 list_expr PR .

    $default  reduce using rule 61 (function_call)


State 148

   64 list_expr: list_expr COMMA . expr

    error       shift, and go to state 67
    OP_UNIT     shift, and go to state 27
    BEGIN_LIST  shift, and go to state 28
    PL          shift, and go to state 29
    ID          shift, and go to state 68
    BOOL        shift, and go to state 35
    INT         shift, and go to state 36
    FLOAT       shift, and go to state 37
    CHAR        shift, and go to state 38

    expr           go to state 155
    function_call  go to state 54
    const          go to state 56
    const_list     go to state 57
    list_of_int    go to state 58
    list_of_float  go to state 59
    list_of_char   go to state 60
    list_of_bool   go to state 61


State 149

   45 sentence_while: WHILE PL expr PR sentence .

    $default  reduce using rule 45 (sentence_while)


State 150

   28 parameters: error .

    $default  reduce using rule 28 (parameters)


State 151

   24 header_subprogram: type ID PL $@6 parameters . PR
   26 parameters: parameters . COMMA type ID

    PR     shift, and go to state 156
    COMMA  shift, and go to state 157


State 152

   27 parameters: type . ID

    ID  shift, and go to state 158


State 153

   44 sentence_if_then_else: IF PL expr PR sentence ELSE . sentence

    error                 shift, and go to state 23
    IF                    shift, and go to state 24
    DO                    shift, and go to state 25
    OP_LIST_START_CURSOR  shift, and go to state 26
    OP_UNIT               shift, and go to state 27
    BEGIN_LIST            shift, and go to state 28
    PL                    shift, and go to state 29
    BEGIN_P               shift, and go to state 8
    INPUT                 shift, and go to state 30
    OUTPUT                shift, and go to state 31
    ID                    shift, and go to state 32
    RETURN                shift, and go to state 33
    WHILE                 shift, and go to state 34
    BOOL                  shift, and go to state 35
    INT                   shift, and go to state 36
    FLOAT                 shift, and go to state 37
    CHAR                  shift, and go to state 38

    block                       go to state 39
    start_block                 go to state 10
    sentence                    go to state 159
    sentence_assign             go to state 44
    sentence_if_then_else       go to state 45
    sentence_while              go to state 46
    sentence_input              go to state 47
    sentence_output             go to state 48
    sentence_return             go to state 49
    sentence_do_until           go to state 50
    sentence_list_forward_back  go to state 51
    sentence_list_start_cursor  go to state 52
    expr                        go to state 53
    function_call               go to state 54
    const                       go to state 56
    const_list                  go to state 57
    list_of_int                 go to state 58
    list_of_float               go to state 59
    list_of_char                go to state 60
    list_of_bool                go to state 61


State 154

   50 sentence_do_until: DO sentence UNTIL PL expr PR . SEMICOLON

    SEMICOLON  shift, and go to state 160


State 155

   58 expr: expr . OP_BIN expr
   64 list_expr: list_expr COMMA expr .

    OP_BIN  shift, and go to state 96

    $default  reduce using rule 64 (list_expr)


State 156

   24 header_subprogram: type ID PL $@6 parameters PR .

    $default  reduce using rule 24 (header_subprogram)


State 157

   26 parameters: parameters COMMA . type ID

    TYPE  shift, and go to state 1
    LIST  shift, and go to state 2

    type  go to state 161


State 158

   27 parameters: type ID .

    $default  reduce using rule 27 (parameters)


State 159

   44 sentence_if_then_else: IF PL expr PR sentence ELSE sentence .

    $default  reduce using rule 44 (sentence_if_then_else)


State 160

   50 sentence_do_until: DO sentence UNTIL PL expr PR SEMICOLON .

    $default  reduce using rule 50 (sentence_do_until)


State 161

   26 parameters: parameters COMMA type . ID

    ID  shift, and go to state 162


State 162

   26 parameters: parameters COMMA type ID .

    $default  reduce using rule 26 (parameters)
